{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/api/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Table, QuerySyntaxEnum, Property, IQueryResult } from '@chego/chego-api';\n\nexport type Row = { table:Table, key:string, content:any, scheme:string[] };\nexport type DataMap = Map<string, Row[]>;\nexport type JoinType = QuerySyntaxEnum.Join | QuerySyntaxEnum.FullJoin | QuerySyntaxEnum.LeftJoin | QuerySyntaxEnum.RightJoin;\nexport type Join = { type:JoinType, propertyA:Property, propertyB:Property };\nexport type Union = { data:IQueryResult, distinct:boolean };\nexport type FormulaRegEx = { pattern:RegExp, replacer: string }\nexport type QueryPipeline = (client:any, data:any) => Promise<any>;\nexport type QueryPipelinesMap = Map<QuerySyntaxEnum, QueryPipeline>\nexport type OutputDataSnapshot = {[tableName:string]:any[]}\nexport type InputDataSnapshot = {[tableName:string]:object}"]}