{"version":3,"file":"contextBuilder.js","sourceRoot":"","sources":["../../src/impl/contextBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import { JoinType, Union } from '../api/types';\r\nimport { PropertyOrLogicalOperatorScope, QuerySyntaxEnum, Fn, Table, FunctionData, Property, AnyButFunction, SortingData, IQueryResult } from '@chego/chego-api';\r\nimport { IQueryContext, IQueryContextBuilder, IJoinBuilder, IConditionsBuilder } from '../api/interfaces';\r\nimport { newQueryContext } from './queryContext';\r\nimport { combineReducers, mergePropertiesWithLogicalAnd, isLogicalOperatorScope, isProperty, isMySQLFunction, isAliasString, newTable, isAlias, newSortingData, parseStringToProperty, newLimit } from '@chego/chego-tools';\r\nimport { parseStringToSortingOrderEnum } from './utils';\r\nimport { newJoinBuilder } from './joins';\r\nimport { newUnion } from './unions';\r\nimport { newConditionsBuilder } from './conditions';\r\n\r\nconst isPrimaryCommand = (type: QuerySyntaxEnum) => type === QuerySyntaxEnum.Select\r\n    || type === QuerySyntaxEnum.Update\r\n    || type === QuerySyntaxEnum.Insert\r\n    || type === QuerySyntaxEnum.Delete;\r\n\r\nconst ifStringThenParseToTable = (tables: Table[], table: any) => {\r\n    if (typeof table === 'string') {\r\n        if (isAliasString(table)) {\r\n            const data: string[] = table.replace(/ {1,}/g, ' ').split(' AS ');\r\n            return tables.concat(newTable(data[0], data[1]));\r\n        }\r\n        return tables.concat(newTable(table));\r\n    }\r\n    return tables.concat(table);\r\n}\r\n\r\nconst ifAliasThenParseToTable = (tables: Table[], table: any) => (isAlias(table))\r\n    ? tables.concat(newTable(table.name, table.alias))\r\n    : tables.concat(table);\r\n\r\nconst ifEmptyTableSetDefault = (defaultTable: Table) => (list: PropertyOrLogicalOperatorScope[], data: PropertyOrLogicalOperatorScope) => {\r\n    if (isProperty(data) && !data.table) {\r\n        data.table = defaultTable;\r\n    }\r\n    return list.concat(data);\r\n}\r\n\r\nconst ifLogicalOperatorScopeThenParseItsKeys = (defaultTable: Table) => (list: PropertyOrLogicalOperatorScope[], data: PropertyOrLogicalOperatorScope) => {\r\n    if (isLogicalOperatorScope(data)) {\r\n        data.properties.reduce(\r\n            combineReducers(\r\n                ifEmptyTableSetDefault(defaultTable),\r\n                ifLogicalOperatorScopeThenParseItsKeys(defaultTable),\r\n            ), []);\r\n    }\r\n    return list.concat(data);\r\n}\r\n\r\nconst handleMySqlFunctions = (mySqlFunctions: FunctionData[]) => (keys: Property[], data: Property | FunctionData) => {\r\n    if (isMySQLFunction(data)) {\r\n        mySqlFunctions.push(data);\r\n        return keys.concat(data.properties);\r\n    }\r\n    return keys.concat(data);\r\n}\r\n\r\nconst parseStringToSortingData = (defaultTable: Table) => (data: SortingData[], entry: string): SortingData[] => {\r\n    const entryParts = entry.replace(/ {1,}/g, ' ').split(' ');\r\n\r\n    if (entryParts.length > 2) {\r\n        throw new Error(`There is something wrong with this order by \"${entry}\"`);\r\n    }\r\n    data.push(newSortingData(\r\n        parseStringToProperty(entryParts[0], defaultTable),\r\n        parseStringToSortingOrderEnum(entryParts[1])\r\n    ));\r\n    return data;\r\n}\r\n\r\nconst parseResultsToUnions = (distinct: boolean) => (list: Union[], data: IQueryResult) => (list.push(newUnion(distinct, data)), list);\r\n\r\nexport const newQueryContextBuilder = (): IQueryContextBuilder => {\r\n    let tempJoinBuilder: IJoinBuilder;\r\n    const queryContext: IQueryContext = newQueryContext();\r\n    const history: QuerySyntaxEnum[] = [];\r\n    const conditionsBuilder: IConditionsBuilder = newConditionsBuilder(history);\r\n\r\n    const handleSelect = (...args: any[]): void => {\r\n        queryContext.data = args.reduce(handleMySqlFunctions(queryContext.functions), []);\r\n    }\r\n\r\n    const handleInsert = (...args: any[]): void => {\r\n        queryContext.data = args;\r\n    }\r\n\r\n    const handleUpdate = (...args: any[]): void => {\r\n        queryContext.tables = args.reduce(combineReducers(\r\n            ifStringThenParseToTable,\r\n            ifAliasThenParseToTable\r\n        ), []);\r\n    }\r\n\r\n    const handleDelete = (...args: any[]): void => {\r\n        queryContext.data = args;\r\n    }\r\n\r\n    const handleFrom = (...args: any[]): void => {\r\n        queryContext.tables = args.reduce(combineReducers(\r\n            ifStringThenParseToTable,\r\n            ifAliasThenParseToTable\r\n        ), []);\r\n        queryContext.data.reduce(ifEmptyTableSetDefault(queryContext.tables[0]), []);\r\n    }\r\n\r\n    const handleOrderBy = (...args: any[]): void => {\r\n        queryContext.orderBy = args.reduce(parseStringToSortingData(queryContext.tables[0]), []);\r\n    }\r\n\r\n    const handleGroupBy = (...args: any[]): void => {\r\n        queryContext.groupBy = args.reduce(parseStringToSortingData(queryContext.tables[0]), []);\r\n    }\r\n\r\n    const handleJoin = (type: JoinType) => (...args: any[]): void => {\r\n        const defualtTable = queryContext.tables[0];\r\n        if (!defualtTable) {\r\n            throw new Error(`\"defaultTable\" is undefined`)\r\n        }\r\n        tempJoinBuilder = newJoinBuilder(type, defualtTable, args[0]);\r\n    }\r\n\r\n    const handleOn = (...args: any[]): void => {\r\n        if (!tempJoinBuilder) {\r\n            throw new Error(`\"latestJoin\" is undefined`)\r\n        }\r\n        queryContext.joins.push(tempJoinBuilder.withOn(args[0], args[1]).build());\r\n        tempJoinBuilder = null;\r\n    }\r\n\r\n    const handleUsing = (...args: any[]): void => {\r\n        if (!tempJoinBuilder) {\r\n            throw new Error(`\"latestJoin\" is undefined`)\r\n        }\r\n        queryContext.joins.push(tempJoinBuilder.using(args[0]).build());\r\n        tempJoinBuilder = null;\r\n    }\r\n\r\n    const handleTo = (...args: any[]): void => {\r\n        queryContext.tables = args.reduce(combineReducers(\r\n            ifStringThenParseToTable,\r\n            ifAliasThenParseToTable\r\n        ), []);\r\n    }\r\n\r\n    const handleSet = (...args: AnyButFunction[]): void => {\r\n        queryContext.data = args;\r\n    }\r\n\r\n    const handleKeychain = (type: QuerySyntaxEnum) => (...args: any[]): void => {\r\n        const defaultTable: Table = queryContext.tables[0];\r\n        const keys: PropertyOrLogicalOperatorScope[] = args.reduce(\r\n            combineReducers(\r\n                ifEmptyTableSetDefault(defaultTable),\r\n                ifLogicalOperatorScopeThenParseItsKeys(defaultTable),\r\n                mergePropertiesWithLogicalAnd\r\n            ), []);\r\n        conditionsBuilder.add(type, ...keys);\r\n    }\r\n\r\n    const handleLimit = (...args: number[]): void => {\r\n        queryContext.limit = newLimit(args[0], args[1]);\r\n    }\r\n\r\n    const handleParentheses = (type:QuerySyntaxEnum) => (): void => {\r\n        conditionsBuilder.add(type);\r\n    }\r\n\r\n    const handleNot = (): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.Not);\r\n    }\r\n\r\n    const handleBetween = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.Between, args);\r\n    }\r\n\r\n    const handleEQ = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.EQ, ...args);\r\n    }\r\n\r\n    const handleLT = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.LT, ...args);\r\n    }\r\n\r\n    const handleGT = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.GT, ...args);\r\n    }\r\n\r\n    const handleLike = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.Like, ...args);\r\n    }\r\n\r\n    const handleNull = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.Null, ...args);\r\n    }\r\n\r\n    const handleExists = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.Exists, ...args);\r\n    }\r\n\r\n    const handleIn = (...args: any[]): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.In, ...args);\r\n    }\r\n\r\n    const handleUnion = (...args: any[]): void => {\r\n        queryContext.unions.push(...args.reduce(parseResultsToUnions(true), []));\r\n    }\r\n\r\n    const handleUnionAll = (...args: any[]): void => {\r\n        queryContext.unions.push(...args.reduce(parseResultsToUnions(false), []));\r\n    }\r\n\r\n    const handleAnd = (): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.And);\r\n    }\r\n\r\n    const handleOr = (): void => {\r\n        conditionsBuilder.add(QuerySyntaxEnum.Or);\r\n    }\r\n\r\n    const handles = new Map<QuerySyntaxEnum, Fn>([\r\n        [QuerySyntaxEnum.Delete, handleDelete],\r\n        [QuerySyntaxEnum.Insert, handleInsert],\r\n        [QuerySyntaxEnum.Select, handleSelect],\r\n        [QuerySyntaxEnum.Update, handleUpdate],\r\n        [QuerySyntaxEnum.From, handleFrom],\r\n        [QuerySyntaxEnum.Where, handleKeychain(QuerySyntaxEnum.Where)],\r\n        [QuerySyntaxEnum.To, handleTo],\r\n        [QuerySyntaxEnum.Set, handleSet],\r\n        [QuerySyntaxEnum.Limit, handleLimit],\r\n        [QuerySyntaxEnum.Between, handleBetween],\r\n        [QuerySyntaxEnum.EQ, handleEQ],\r\n        [QuerySyntaxEnum.GT, handleGT],\r\n        [QuerySyntaxEnum.Like, handleLike],\r\n        [QuerySyntaxEnum.LT, handleLT],\r\n        [QuerySyntaxEnum.Null, handleNull],\r\n        [QuerySyntaxEnum.Not, handleNot],\r\n        [QuerySyntaxEnum.And, handleAnd],\r\n        [QuerySyntaxEnum.Or, handleOr],\r\n        [QuerySyntaxEnum.LeftJoin, handleJoin(QuerySyntaxEnum.LeftJoin)],\r\n        [QuerySyntaxEnum.RightJoin, handleJoin(QuerySyntaxEnum.RightJoin)],\r\n        [QuerySyntaxEnum.Join, handleJoin(QuerySyntaxEnum.Join)],\r\n        [QuerySyntaxEnum.FullJoin, handleJoin(QuerySyntaxEnum.FullJoin)],\r\n        [QuerySyntaxEnum.On, handleOn],\r\n        [QuerySyntaxEnum.Using, handleUsing],\r\n        [QuerySyntaxEnum.OrderBy, handleOrderBy],\r\n        [QuerySyntaxEnum.GroupBy, handleGroupBy],\r\n        [QuerySyntaxEnum.OpenParentheses, handleParentheses(QuerySyntaxEnum.OpenParentheses)],\r\n        [QuerySyntaxEnum.CloseParentheses, handleParentheses(QuerySyntaxEnum.CloseParentheses)],\r\n        [QuerySyntaxEnum.Union, handleUnion],\r\n        [QuerySyntaxEnum.UnionAll, handleUnionAll],\r\n        [QuerySyntaxEnum.Exists, handleExists],\r\n        [QuerySyntaxEnum.Having, handleKeychain(QuerySyntaxEnum.Having)],\r\n        [QuerySyntaxEnum.In, handleIn]\r\n    ]);\r\n\r\n    const builder: IQueryContextBuilder = {\r\n        with: (type: QuerySyntaxEnum, params: any[]): void => {\r\n            const handle = handles.get(type);\r\n            if (handle) {\r\n                console.log(QuerySyntaxEnum[type])\r\n                handle(...params);\r\n            }\r\n            if (isPrimaryCommand(type)) {\r\n                queryContext.type = type;\r\n            }\r\n            history.push(type);\r\n        },\r\n        build: (): IQueryContext => {\r\n            queryContext.conditions = conditionsBuilder.build();\r\n            console.log('@!!!', JSON.stringify(queryContext.conditions))\r\n            return queryContext;\r\n        }\r\n    }\r\n    return builder;\r\n}"]}