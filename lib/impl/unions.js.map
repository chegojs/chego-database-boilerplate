{"version":3,"file":"unions.js","sourceRoot":"","sources":["../../src/impl/unions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Union } from '../api/types';\r\nimport { Property, Table, IQueryResult } from '@chego/chego-api';\r\nimport { Row, DataMap, OutputDataSnapshot } from '../api/types';\r\nimport { newRow } from './utils';\r\nimport { getLabel } from '@chego/chego-tools';\r\nimport { IQueryContext } from '../api/interfaces';\r\n\r\nconst replaceScheme = (scheme: string[], table: Table) => (list: any[], row: any): Row[] => {\r\n    const rowScheme: string[] = Object.keys(row)\r\n    const content: any = scheme.reduce((result: any, prop: string, i: number) => {\r\n        const key: string = rowScheme[i];\r\n        return Object.assign(result, { [prop]: row[key] });\r\n    }, {});\r\n    list.push(newRow({ table, scheme, content, key: '' }));\r\n    return list;\r\n}\r\n\r\nconst getPropertyLabel = (list: string[], property: Property) => (list.push(getLabel(property)), list);\r\n\r\nconst getDefaultScheme = (queryContext: IQueryContext, queryResult: DataMap): string[] => {\r\n    const defaultTable: Table = queryContext.tables[0];\r\n    return (queryContext.data.length)\r\n        ? queryContext.data.reduce(getPropertyLabel, [])\r\n        : queryResult.get(getLabel(defaultTable))[0].scheme;\r\n}\r\n\r\nconst isInResults = (toCompare: any, results: DataMap): boolean => {\r\n    let result: boolean = false;\r\n    results.forEach((rows: Row[]) => {\r\n        result = rows.reduce((is: boolean, row: Row) => {\r\n            Object.values(row.content).forEach((value: any) => {\r\n                if (value === toCompare) {\r\n                    is = true;\r\n                }\r\n            });\r\n            return is;\r\n        }, false);\r\n    });\r\n    return result;\r\n}\r\n\r\nconst selectDistinctValues = (results: DataMap, res: any, union: Union) => {\r\n    const data: any = union.data.getData();\r\n    for (const table of Object.keys(data)) {\r\n        const rows:any[] = data[table];\r\n        rows.forEach((row:any, i:number) => {\r\n            Object.keys(row).forEach((key: string) => {\r\n                if (isInResults(row[key], results)) {\r\n                    delete row[key];\r\n                }\r\n            });\r\n            if (Object.keys(row).length === 0) {\r\n                rows.splice(i,1)\r\n            }\r\n        });\r\n    }\r\n    return Object.assign(res, data);\r\n}\r\n\r\nconst combineResults = (results: DataMap) => (res: any, union: Union) =>\r\n    union.distinct\r\n        ? selectDistinctValues(results, res, union)\r\n        : Object.assign(res, union.data.getData());\r\n\r\nconst checkIfDistinct = (result: boolean, union: Union) => union.distinct ? true : result;\r\n\r\nconst newUniqueValues = (scheme: string[]) => {\r\n    const entries: any[] = scheme.reduce((map: any[], key: string) => (map.push([key, []]), map), []);\r\n    return new Map<string, any[]>(entries);\r\n}\r\n\r\nconst filterUniqueResults = (scheme:string[], uniqueValuesMap: Map<string, any[]>) => (row: Row) => {\r\n    for (const key of scheme) {\r\n        const uniqueValues: any[] = uniqueValuesMap.get(key);\r\n        const value: any = row.content[key];\r\n        if (uniqueValues.indexOf(row.content[key]) === -1) {\r\n            uniqueValues.push(value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeOnlyUniqueEntriesIfRequired = (queryContext: IQueryContext) => (queryResult: DataMap): DataMap => {\r\n    const storeOnlyUnique: boolean = queryContext.unions.reduce(checkIfDistinct, false);\r\n    if (storeOnlyUnique) {\r\n        const defaultTable: Table = queryContext.tables[0];\r\n        const defaultLabel: string = getLabel(defaultTable);\r\n        const scheme: string[] = (queryContext.data.length)\r\n            ? queryContext.data.reduce(getPropertyLabel, [])\r\n            : queryResult.get(defaultLabel)[0].scheme;\r\n        const rows: Row[] = queryResult.get(defaultLabel).filter(filterUniqueResults(scheme, newUniqueValues(scheme)));\r\n        queryResult.set(defaultLabel, rows);\r\n    }\r\n    return queryResult;\r\n}\r\n\r\nexport const applyUnionsIfAny = (queryContext: IQueryContext) => (queryResult: DataMap): DataMap => {\r\n    if (queryContext.unions.length) {\r\n        const defaultTable: Table = queryContext.tables[0];\r\n        const defaultLabel: string = getLabel(defaultTable);\r\n        const scheme: string[] = getDefaultScheme(queryContext, queryResult);\r\n        const union: OutputDataSnapshot = queryContext.unions.reduce(combineResults(queryResult), {});\r\n        for (const table of Object.keys(union)) {\r\n            const rows: Row[] = union[table].reduce(replaceScheme(scheme, defaultTable), []);\r\n            if (queryResult.has(defaultLabel)) {\r\n                queryResult.get(defaultLabel).push(...rows);\r\n            } else {\r\n                queryResult.set(defaultLabel, rows);\r\n            }\r\n        }\r\n    }\r\n    return queryResult;\r\n}\r\n\r\nexport const newUnion = (distinct:boolean, data:IQueryResult): Union => ({distinct, data});"]}