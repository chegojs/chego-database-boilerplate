{"version":3,"file":"validators.js","sourceRoot":"","sources":["../../src/impl/validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { QuerySyntaxEnum } from '@chego/chego-api';\r\nimport { isLogicalOperatorScope, isProperty, isTable } from '@chego/chego-tools';\r\n\r\nconst validateWhere = (values: any[]): boolean => {\r\n    if (values.length === 0) {\r\n        throw new Error('Empty WHERE clausule')\r\n    }\r\n    if (isLogicalOperatorScope(values[0])) {\r\n        throw new Error('First condition key is logical operator')\r\n    }\r\n    noArgsValidation(values);\r\n    return true;\r\n}\r\n\r\nconst noArgsValidation = (...args: any[]): boolean => {\r\n    if (args.length === 0) {\r\n        throw new Error('No arguments!');\r\n    }\r\n    return true;\r\n}\r\n\r\nconst validateSet = (...args: any[]): boolean => {\r\n    if (args.length > 1) {\r\n        throw new Error('Too many arguments');\r\n    }\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateEQ = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateLT = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateGT = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateLimit = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateBetween = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateFrom = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateExists = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateHaving = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateUnion = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateOrderBy = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateTo = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\nconst validateUpdate = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\nconst validateIn = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\nconst validateInsert = (...args: any[]): boolean => {\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateJoin = (...args: any[]): boolean => {\r\n    if (!isTable(args[0])) {\r\n        throw new Error(`given argument is not a Property object`);\r\n    }\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateUsing = (...args: any[]): boolean => {\r\n    if (!isProperty(args[0])) {\r\n        throw new Error(`given argument is not a Property object`);\r\n    }\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nconst validateOn = (...args: any[]): boolean => {\r\n    for (const arg of args) {\r\n        if (!isProperty(arg)) {\r\n            throw new Error(`given argument is not a Property object`);\r\n        }\r\n    }\r\n    noArgsValidation(...args);\r\n    return true;\r\n}\r\n\r\nexport const validators = new Map<QuerySyntaxEnum, (...args: any[]) => boolean>([\r\n    [QuerySyntaxEnum.Where, validateWhere],\r\n    [QuerySyntaxEnum.Set, validateSet],\r\n    [QuerySyntaxEnum.Join, validateJoin],\r\n    [QuerySyntaxEnum.FullJoin, validateJoin],\r\n    [QuerySyntaxEnum.LeftJoin, validateJoin],\r\n    [QuerySyntaxEnum.RightJoin, validateJoin],\r\n    [QuerySyntaxEnum.On, validateOn],\r\n    [QuerySyntaxEnum.EQ, validateEQ],\r\n    [QuerySyntaxEnum.LT, validateLT],\r\n    [QuerySyntaxEnum.GT, validateGT],\r\n    [QuerySyntaxEnum.Limit, validateLimit],\r\n    [QuerySyntaxEnum.Between, validateBetween],\r\n    [QuerySyntaxEnum.From, validateFrom],\r\n    [QuerySyntaxEnum.Exists, validateExists],\r\n    [QuerySyntaxEnum.Having, validateHaving],\r\n    [QuerySyntaxEnum.Union, validateUnion],\r\n    [QuerySyntaxEnum.OrderBy, validateOrderBy],\r\n    [QuerySyntaxEnum.To, validateTo],\r\n    [QuerySyntaxEnum.Update, validateUpdate],\r\n    [QuerySyntaxEnum.In, validateIn],\r\n    [QuerySyntaxEnum.Insert, validateInsert],\r\n    [QuerySyntaxEnum.Using, validateUsing],\r\n]);"]}